// <auto-generated />
using System;
using DecentraApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DecentraApi.Migrations
{
    [DbContext(typeof(DecentraDbContext))]
    [Migration("20250914071106_AddImageToPhoto")]
    partial class AddImageToPhoto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DecentraApi.Models.Appeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Appealed")
                        .HasColumnType("boolean")
                        .HasColumnName("Appealed");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<int[]>("PhotoIds")
                        .HasColumnType("integer[]")
                        .HasColumnName("PhotoIds");

                    b.HasKey("Id");

                    b.ToTable("appeals", (string)null);
                });

            modelBuilder.Entity("DecentraApi.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Dent")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Dent");

                    b.Property<string>("Dust")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Dust");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Image");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastUpdated")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Rust")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Rust");

                    b.Property<string>("Scratch")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Scratch");

                    b.HasKey("Id");

                    b.ToTable("photos", (string)null);
                });

            modelBuilder.Entity("DecentraApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppealId")
                        .HasColumnType("integer")
                        .HasColumnName("AppealId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<int[]>("PhotoIds")
                        .HasColumnType("integer[]")
                        .HasColumnName("PhotoIds");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Role");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.HasKey("Id");

                    b.HasIndex("AppealId")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.HasIndex("PhotoIds")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
